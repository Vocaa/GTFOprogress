@using GTFOprogress.Models;
@using GTFOprogress.Common;

<!--##################################################################-->
<!--##################################################################-->
<!--##################################################################-->

<div class="p-2">

    <div class="columns-2">
        <div>@rundown.Name</div>
        <div class="text-base text-white text-opacity-50">@rundown.Title</div>
    </div>

    <div class="border border-white">
        @foreach (Tier tier in Tier.GetValues(typeof(Tier)))
    {
        <div class="columns-4">
        
        @foreach (Level level in rundown.GetTier(tier))
        {
            <div class="break-inside-avoid-column p-2">
                <div class="basis-full text-xs">"@level.Title"</div>
                <div class="basis-full text-xl">
                    <LevelComponent level="level" />
                </div>
            </div>
        }
        </div>
    }
    </div>

</div>

<!--##################################################################-->
<!--##################################################################-->
<!--##################################################################-->

@code {
    [Parameter]
    public Rundown rundown { get; set; }

    int width = 4;
    int height = 5;

    protected override Task OnInitializedAsync()
    {

        return base.OnInitializedAsync();
    }

    protected void CreateGrid()
    {

    }

}
