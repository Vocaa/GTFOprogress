@using GTFOprogress.Models
@using GTFOprogress.Common
@using GTFOprogress.Services

@inject SettingsService _settings
@inject StateHandlerService _statehandler

<!--##################################################################-->
<!--##################################################################-->
<!--##################################################################-->

<div class="p-2">

    <div class="flex justify-between items-end">
        <div class="">@rundown.Name</div>
        <div class="text-base text-white text-opacity-50">@rundown.Title</div>
    </div>

    <div class="border border-white flex">
        <div class="h-72 w-96 p-1">
            @foreach (Tier tier in Tier.GetValues(typeof(Tier)))
            {
                <div class="columns-4">
        
                @foreach (Level level in rundown.GetTier(tier))
                {
                    @if(!(level.Hidden == true))
                    {
                        <div class="break-inside-avoid-column p-1 transition-transform duration-100 hover:scale-110">
                            <div class="">
                                <LevelComponent level="level" NotifyParent="@UpdateFromChild"/>
                            </div>
                        </div>
                    }
                }
                </div>
            }
        </div>
        <div class="w-24">
            <StatsComponent rundown="rundown" @ref="stats"></StatsComponent>
        </div>
    </div>



</div>

<!--##################################################################-->
<!--##################################################################-->
<!--##################################################################-->

@code {
    [Parameter]
    public Rundown rundown { get; set; }

    StatsComponent stats;

    protected override Task OnInitializedAsync()
    {

        return base.OnInitializedAsync();
    }

    public void update()
    {
        StateHasChanged();
    }

    public bool HasHiddenLevels()
    {
        return (rundown.GetHiddenByDefault().Count > 0);
    }

    public void UpdateFromChild()
    {
        if (HasHiddenLevels())
        {
            _statehandler.UpdateR8();
            StateHasChanged();
            stats.Update();
        }
    }

}
