@using GTFOprogress.Models;
@using GTFOprogress.Common;

@code {
        [Parameter]
        public Level? level { get; set; }

        public void updateState(string ts)
        {
            switch(ts)
            {
                case "secondary":
                    level.SecondaryState = ToggleState(level.SecondaryState);
                    break;
                case "overload":
                    level.OverloadState = ToggleState(level.OverloadState);
                    break;
                case "prisoner":
                    level.PrisonerEfficiency = ToggleState(level.PrisonerEfficiency);
                    break;
                default:
                    return;

            }
            StateHasChanged();
        }

        public TaskState ToggleState(TaskState ts)
        {
            switch (ts)
            {
                case TaskState.Empty:
                    return ts;
                    break;
                case TaskState.Incomplete:
                    return TaskState.Complete;
                    break;
                case TaskState.Complete:
                    return TaskState.Incomplete;
                    break;
                default:
                    return ts;
                    break;
            }
        }
}

<div class="@level.LevelCompletion level-card">
    @if (level != null)
    {
        <h2 class="title">@level.Name</h2>
        <div class="task-list">
            <div class="@level.SecondaryState task" @onclick='() => updateState("secondary")'>◼</div>
            <div class="@level.OverloadState task" @onclick='() => updateState("overload")'>◼</div>
            <div class="@level.PrisonerEfficiency task" @onclick='() => updateState("prisoner")'>◼</div>
        </div>
    }
</div>

<style>





    .level-card {
        display: flex;
        align-items: flex-start;
        padding: 3px;
        border-radius: 1px;
        /* top | right | bottom | left */
        border-width: 3px 3px 3px 12px;
        border-style: solid;
        width: 100px;
        margin: 0px;
        cursor: pointer;
    }

    .title {
        margin: 0px;
        display:inline;
    }

    .task-list {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        padding: 0px;
        width: auto;
        max-width: auto;
    }

    .task {
        width: 8px;
        height: 8px;
        padding: 0px;
        margin: 1px;
        font-size: 10px;
        cursor: pointer;
    }

    .Empty {
        color: rgba(255, 255, 255, 0);
        border-color: rgba(255, 255, 255, 0);
    }

    .Incomplete {
        color: rgba(255, 255, 255, 0.5);
        border-color: rgba(255, 255, 255, 0.5);
    }

    .Complete {
        color: rgba(255, 255, 255, 1);
        border-color: rgba(255, 255, 255, 1);
    }
</style>
