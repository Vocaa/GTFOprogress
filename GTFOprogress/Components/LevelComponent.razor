@using GTFOProgress.Models;
@using GTFOProgress.Common.TaskState;

@code {
        [Parameter]
        public Level? level { get; set; }

        public void updateState(string ts)
        {
            switch(ts)
            {
                case "secondary":
                    level.secondaryState = ToggleState(level.secondaryState);
                    break;
                case "overload":
                    level.overloadState = ToggleState(level.overloadState);
                    break;
                case "prisoner":
                    level.prisonerEfficiency = ToggleState(level.prisonerEfficiency);
                    break;
                default:
                    return;

            }
            StateHasChanged();
        }

        public TaskState ToggleState(TaskState ts)
        {
            switch (ts)
            {
                case TaskState.Empty:
                    return ts;
                    break;
                case TaskState.Incomplete:
                    return TaskState.Complete;
                    break;
                case TaskState.Complete:
                    return TaskState.Incomplete;
                    break;
                default:
                    return ts;
                    break;
            }
        }
}

<div class="level-card">
    @if (level != null)
    {
    <h2>@level.name</h2>
    <div class="task-completion-indicators">

        <div class="@level.secondaryState" @onclick='() => updateState("secondary")'>◼</div>
        <div class="@level.overloadState" @onclick='() => updateState("overload")'>◼</div>
        <div class="@level.prisonerEfficiency" @onclick='() => updateState("prisoner")'>◼</div>

    </div>
    }
</div>

<style>
    .level-card {
        background: /*...*/;
        padding: 10px;
        border-radius: 5px;
        width: 150px;
    }

    .task-completion-indicators {
        display: flex;
        gap: 10px;
    }

    .task-indicator {
        width: 30px;
        height: 30px;
        background: grey;
        border-radius: 4px;
        cursor: pointer;
    }

    .task-indicator.empty {
            color: rgba(255, 255, 255, 1);
    }

    .task-indicator.incomplete {
            color: rgba(255, 255, 255, 0.5);
    }

    .task-indicator.complete {
            color: rgba(255, 255, 255, 0);
    }
</style>
